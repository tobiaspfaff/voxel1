import os, glob

Import('*')
debug = ARGUMENTS.get('debug', 0)
standalone = ARGUMENTS.get('standalone', 0)

flags = '-Wall '
if 'parent_call' in locals():
    standalone = False

if int(debug):
    # debug
    flags += '-g -DDEBUG'
    bdir = 'build/debug'
else:
    # release
    flags += '-O3'
    bdir = 'build/release'

env = Environment(CCFLAGS = '-Wall '+flags)
env.VariantDir(bdir, 'src', duplicate=0)

libs = ['openvdb','tbb','Half']
source = []
for f in Glob(bdir+'/*.cpp'):
    if not f.name == 'main.cpp' or standalone:
        source.append(f)

if standalone:
    env.Program(target=bdir+'/backend', source=source, LIBS=libs)
else:
    lib = env.Library(target=bdir+'/backend', source=source)
    Return('lib')